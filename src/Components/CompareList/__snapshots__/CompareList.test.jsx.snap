// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CompareListComponent matches snapshot 1`] = `
<div
  className="usa-grid-full content-container comparison-outer-container"
>
  <div>
    <Connect(withRouter())
      blacklistMatcher="/compare"
      ignoreCurrentPath={true}
    />
  </div>
  <div
    className="comparison-container"
  >
    <h1>
      Compare Positions
    </h1>
    <div
      className="comparison-table-container"
    >
      <table
        className="tm-table"
      >
        <caption
          className="usa-sr-only"
        >
          Position details comparison:
        </caption>
        <thead
          className="usa-sr-only"
        >
          <tr>
            <th
              scope="row"
            >
              Position
            </th>
            <th>
              <div
                className="column-title-main"
              />
            </th>
            <th>
              <div
                className="column-title-main"
              />
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th
              scope="row"
            >
              Position
            </th>
            <td>
              <div
                className="usa-grid-full"
              >
                <div
                  className="column-title-main"
                >
                  OMS (DCM)
                </div>
                <div
                  className="close-button-container"
                >
                  <CompareCheck
                    as="div"
                    className=""
                    customElement={
                      <FontAwesome
                        name="close"
                      />
                    }
                    interactiveElementProps={
                      Object {
                        "title": "Remove this comparison",
                      }
                    }
                    limit={5}
                    onToggle={[Function]}
                    refKey="10034001"
                    type="compare"
                  />
                </div>
              </div>
              <span
                aria-labelledby="1 0 0 3 4 0 0 1"
              >
                10034001
              </span>
            </td>
            <td>
              <div
                className="usa-grid-full"
              >
                <div
                  className="column-title-main"
                >
                  SPECIAL AGENT
                </div>
                <div
                  className="close-button-container"
                >
                  <CompareCheck
                    as="div"
                    className=""
                    customElement={
                      <FontAwesome
                        name="close"
                      />
                    }
                    interactiveElementProps={
                      Object {
                        "title": "Remove this comparison",
                      }
                    }
                    limit={5}
                    onToggle={[Function]}
                    refKey="56082000"
                    type="compare"
                  />
                </div>
              </div>
              <span
                aria-labelledby="5 6 0 8 2 0 0 0"
              >
                56082000
              </span>
            </td>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
          </tr>
          <tr>
            <th
              scope="row"
            >
              Link to details
            </th>
            <td>
              <div
                className="column-title-link"
              >
                <Link
                  replace={false}
                  to="/details/1"
                >
                  View position
                </Link>
              </div>
            </td>
            <td>
              <div
                className="column-title-link"
              >
                <Link
                  replace={false}
                  to="/details/2"
                >
                  View position
                </Link>
              </div>
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <Flag
            name="flags.static_content"
            render={[Function]}
          />
          <tr>
            <th
              scope="row"
            >
              Post
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              TED
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Skill
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Grade
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Bureau
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Tour of duty
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Language
            </th>
            <td>
              <LanguageList
                languages={Array []}
                propToUse="representation"
              />
            </td>
            <td>
              <LanguageList
                languages={Array []}
                propToUse="representation"
              />
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Post differential
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Danger pay
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Favorite
            </th>
            <td>
              <Connect(FavoriteContainer)
                compareArray={
                  Object {
                    "results": Array [],
                  }
                }
                hasBorder={true}
                refKey={1}
                refresh={true}
                useButtonClass={true}
                useButtonClassSecondary={true}
              />
            </td>
            <td>
              <Connect(FavoriteContainer)
                compareArray={
                  Object {
                    "results": Array [],
                  }
                }
                hasBorder={true}
                refKey={2}
                refresh={true}
                useButtonClass={true}
                useButtonClassSecondary={true}
              />
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <Flag
            name="flags.static_content"
            render={[Function]}
          />
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`CompareListComponent matches snapshot when isLoading is true 1`] = `
<div
  className="usa-grid-full content-container comparison-outer-container"
>
  <div>
    <Connect(withRouter())
      blacklistMatcher="/compare"
      ignoreCurrentPath={true}
    />
  </div>
  <div
    className="comparison-container"
  >
    <h1>
      Compare Positions
    </h1>
    <Spinner
      size="big"
      type="homepage-position-results"
    />
  </div>
</div>
`;

exports[`CompareListComponent matches snapshot when there is an obc id 1`] = `
<div
  className="usa-grid-full content-container comparison-outer-container"
>
  <div>
    <Connect(withRouter())
      blacklistMatcher="/compare"
      ignoreCurrentPath={true}
    />
  </div>
  <div
    className="comparison-container"
  >
    <h1>
      Compare Positions
    </h1>
    <div
      className="comparison-table-container"
    >
      <table
        className="tm-table"
      >
        <caption
          className="usa-sr-only"
        >
          Position details comparison:
        </caption>
        <thead
          className="usa-sr-only"
        >
          <tr>
            <th
              scope="row"
            >
              Position
            </th>
            <th>
              <div
                className="column-title-main"
              />
            </th>
            <th>
              <div
                className="column-title-main"
              />
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th
              scope="row"
            >
              Position
            </th>
            <td>
              <div
                className="usa-grid-full"
              >
                <div
                  className="column-title-main"
                >
                  OMS (DCM)
                </div>
                <div
                  className="close-button-container"
                >
                  <CompareCheck
                    as="div"
                    className=""
                    customElement={
                      <FontAwesome
                        name="close"
                      />
                    }
                    interactiveElementProps={
                      Object {
                        "title": "Remove this comparison",
                      }
                    }
                    limit={5}
                    onToggle={[Function]}
                    refKey="10034001"
                    type="compare"
                  />
                </div>
              </div>
              <span
                aria-labelledby="1 0 0 3 4 0 0 1"
              >
                10034001
              </span>
            </td>
            <td>
              <div
                className="usa-grid-full"
              >
                <div
                  className="column-title-main"
                >
                  SPECIAL AGENT
                </div>
                <div
                  className="close-button-container"
                >
                  <CompareCheck
                    as="div"
                    className=""
                    customElement={
                      <FontAwesome
                        name="close"
                      />
                    }
                    interactiveElementProps={
                      Object {
                        "title": "Remove this comparison",
                      }
                    }
                    limit={5}
                    onToggle={[Function]}
                    refKey="56082000"
                    type="compare"
                  />
                </div>
              </div>
              <span
                aria-labelledby="5 6 0 8 2 0 0 0"
              >
                56082000
              </span>
            </td>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
            <th
              className="empty"
            >
              Return to search results and add more positions to compare.
            </th>
          </tr>
          <tr>
            <th
              scope="row"
            >
              Link to details
            </th>
            <td>
              <div
                className="column-title-link"
              >
                <Link
                  replace={false}
                  to="/details/1"
                >
                  View position
                </Link>
              </div>
            </td>
            <td>
              <div
                className="column-title-link"
              >
                <Link
                  replace={false}
                  to="/details/2"
                >
                  View position
                </Link>
              </div>
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <Flag
            name="flags.static_content"
            render={[Function]}
          />
          <tr>
            <th
              scope="row"
            >
              Post
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              TED
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Skill
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Grade
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Bureau
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Tour of duty
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Language
            </th>
            <td>
              <LanguageList
                languages={Array []}
                propToUse="representation"
              />
            </td>
            <td>
              <LanguageList
                languages={Array []}
                propToUse="representation"
              />
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Post differential
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Danger pay
            </th>
            <td>
              None listed
            </td>
            <td>
              None listed
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <tr>
            <th
              scope="row"
            >
              Favorite
            </th>
            <td>
              <Connect(FavoriteContainer)
                compareArray={
                  Object {
                    "results": Array [],
                  }
                }
                hasBorder={true}
                refKey={1}
                refresh={true}
                useButtonClass={true}
                useButtonClassSecondary={true}
              />
            </td>
            <td>
              <Connect(FavoriteContainer)
                compareArray={
                  Object {
                    "results": Array [],
                  }
                }
                hasBorder={true}
                refKey={2}
                refresh={true}
                useButtonClass={true}
                useButtonClassSecondary={true}
              />
            </td>
            <td
              className="empty"
            />
            <td
              className="empty"
            />
            <td
              className="empty"
            />
          </tr>
          <Flag
            name="flags.static_content"
            render={[Function]}
          />
        </tbody>
      </table>
    </div>
  </div>
</div>
`;
