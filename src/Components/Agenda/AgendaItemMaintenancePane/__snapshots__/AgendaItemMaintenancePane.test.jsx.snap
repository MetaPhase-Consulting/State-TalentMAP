// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AgendaItemMaintenancePane Component matches snapshot 1`] = `
<div
  className="ai-maintenance-pane"
>
  <div
    className="ai-maintenance-header"
  >
    <div
      className="back-save-btns-container"
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <Connect(withRouter(BackButton)) />
      <InteractiveElement
        className="save-ai-btn"
        onClick={[Function]}
        title="Save Agenda Item"
        type="div"
      >
        Save Agenda Item
      </InteractiveElement>
    </div>
    <div
      className="ai-maintenance-header-dd"
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <SelectForm
        className="select-offset select-black"
        defaultSort={
          Object {
            "text": "Employee Assignment Separations, and Bids",
            "value": "A",
          }
        }
        disabled={false}
        emptyOptionText="- Select -"
        id="ai-maintenance-dd-asg"
        includeFirstEmptyOption={false}
        labelSrOnly={false}
        onSelectOption={[Function]}
        options={
          Array [
            Object {
              "text": "Employee Assignment Separations, and Bids",
              "value": "A",
            },
          ]
        }
        transformValue={[Function]}
      />
      <SelectForm
        className="select-offset select-black"
        defaultSort="A"
        disabled={false}
        emptyOptionText="- Select -"
        id="ai-maintenance-status"
        includeFirstEmptyOption={false}
        label="Status:"
        labelSrOnly={false}
        onSelectOption={[Function]}
        options={
          Array [
            Object {
              "text": "Approved",
              "value": "A",
            },
            Object {
              "text": "Deferred - Proposed Position",
              "value": "C",
            },
            Object {
              "text": "Disapproved",
              "value": "D",
            },
            Object {
              "text": "Deferred",
              "value": "F",
            },
            Object {
              "text": "Held",
              "value": "H",
            },
            Object {
              "text": "Move to ML/ID",
              "value": "M",
            },
            Object {
              "text": "Not Ready",
              "value": "N",
            },
            Object {
              "text": "Out of Order",
              "value": "O",
            },
            Object {
              "text": "PIP",
              "value": "P",
            },
            Object {
              "text": "Ready",
              "value": "R",
            },
            Object {
              "text": "Withdrawn",
              "value": "W",
            },
          ]
        }
        transformValue={[Function]}
      />
      <div
        className="usa-form"
      >
        <label>
          Add Position Number:
        </label>
        <input
          id="add-pos-num-input"
          name="add"
          onChange={[Function]}
          type="add"
          value="1234578"
        />
        <InteractiveElement
          className=""
          id="add-pos-num-icon"
          onClick={[Function]}
          role="button"
          title="Add position"
          type="span"
        >
          <FontAwesome
            name="plus"
          />
        </InteractiveElement>
      </div>
      <SelectForm
        className="select-offset select-black"
        defaultSort="A"
        disabled={false}
        emptyOptionText="- Select -"
        id="ai-maintenance-status"
        includeFirstEmptyOption={false}
        label="Report Category:"
        labelSrOnly={false}
        onSelectOption={[Function]}
        options={
          Array [
            Object {
              "text": "Approved",
              "value": "A",
            },
            Object {
              "text": "Deferred - Proposed Position",
              "value": "C",
            },
            Object {
              "text": "Disapproved",
              "value": "D",
            },
            Object {
              "text": "Deferred",
              "value": "F",
            },
            Object {
              "text": "Held",
              "value": "H",
            },
            Object {
              "text": "Move to ML/ID",
              "value": "M",
            },
            Object {
              "text": "Not Ready",
              "value": "N",
            },
            Object {
              "text": "Out of Order",
              "value": "O",
            },
            Object {
              "text": "PIP",
              "value": "P",
            },
            Object {
              "text": "Ready",
              "value": "R",
            },
            Object {
              "text": "Withdrawn",
              "value": "W",
            },
          ]
        }
        transformValue={[Function]}
      />
      <SelectForm
        className="select-offset select-black"
        defaultSort="A"
        disabled={false}
        emptyOptionText="- Select -"
        id="ai-maintenance-status"
        includeFirstEmptyOption={false}
        label="Panel Date:"
        labelSrOnly={false}
        onSelectOption={[Function]}
        options={
          Array [
            Object {
              "text": "Approved",
              "value": "A",
            },
            Object {
              "text": "Deferred - Proposed Position",
              "value": "C",
            },
            Object {
              "text": "Disapproved",
              "value": "D",
            },
            Object {
              "text": "Deferred",
              "value": "F",
            },
            Object {
              "text": "Held",
              "value": "H",
            },
            Object {
              "text": "Move to ML/ID",
              "value": "M",
            },
            Object {
              "text": "Not Ready",
              "value": "N",
            },
            Object {
              "text": "Out of Order",
              "value": "O",
            },
            Object {
              "text": "PIP",
              "value": "P",
            },
            Object {
              "text": "Ready",
              "value": "R",
            },
            Object {
              "text": "Withdrawn",
              "value": "W",
            },
          ]
        }
        transformValue={[Function]}
      />
    </div>
    <div
      className="usa-form remarks"
    >
      <label>
        Remarks:
      </label>
      <div
        className="remarks-container"
      >
        <InteractiveElement
          className="save-ai-btn"
          id="add-remark"
          onClick={[Function]}
          role="button"
          title="Add remark"
          type="span"
        >
          <FontAwesome
            name="plus"
          />
        </InteractiveElement>
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="Critical Need Position"
          title="Critical Need Position"
          type={null}
        />
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="High Differential Post"
          title="High Differential Post"
          type={null}
        />
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="Reassignment at post"
          title="Reassignment at post"
          type={null}
        />
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="SND Post"
          title="SND Post"
          type={null}
        />
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="Continues SND eligibility"
          title="Continues SND eligibility"
          type={null}
        />
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="Creator(s):Townpost, Jenny"
          title="Creator(s):Townpost, Jenny"
          type="person"
        />
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="Modifier(s):WoodwardWA"
          title="Modifier(s):WoodwardWA"
          type="person"
        />
        <RemarksPill
          color="#513C2C"
          isEditable={true}
          key="CDO: Rehman, Tarek S"
          title="CDO: Rehman, Tarek S"
          type="person"
        />
      </div>
    </div>
    <div
      className="usa-form corrections"
    >
      <label>
        Corrections:
      </label>
      <div>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut tincidunt tincidunt imperdiet. Proin nisi diam, tincidunt rhoncus placerat et, fringilla non ligula. Suspendisse sed nibh nisl. Cras varius lacinia commodo. Sed consequat porttitor lacus id aliquam. Praesent et tortor ut erat varius pharetra. Nunc imperdiet metus nec ipsum interdum rutrum.
      </div>
    </div>
  </div>
</div>
`;
